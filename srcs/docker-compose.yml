services:

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    volumes:
      - v_mariadb:/var/lib/mysql
      - ./requirements/mariadb/log:/log/mariadb

    environment:
        - MYSQL_USER
        - MYSQL_PASSWORD
        - MYSQL_DATABASE
        - RUBY_DATABASE
        - WORDPRESS_HOST
        - MYSQL_ROOT_PASSWORD

    expose:
      - 3306
    networks:
      - inception

    restart: always
    entrypoint: tmp/init.sh

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    volumes:
      - v_wordpress:/var/www/html

    ports:
      - 443:443
    networks:
      - inception
    depends_on:
      - wordpress

    restart: always
    entrypoint: nginx -g "daemon off;"

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
        - v_wordpress:/var/www/html

    environment:
        - MYSQL_USER
        - MYSQL_PASSWORD
        - MYSQL_DATABASE
        - MYSQL_HOSTNAME
        - WORDPRESS_DOMAIN
        - REDIS_HOST
        - REDIS_PORT
        - REDIS_PASSWORD
        - FTP_HOST
        - FTP_USER
        - FTP_PASSWORD
        - FTP_HOSTNAME
        - FTP_BASE

    expose:
      - 9000
    networks:
      - inception
    depends_on:
      - mariadb
      - redis

    restart: always
    entrypoint: ./init.sh

  redis:
    container_name: redis
    build:
      context: ./requirements/redis
      dockerfile: Dockerfile
    volumes:
      - v_redis:/data

    environment:
      - REDIS_PASSWORD
    expose:
      - 6379
    networks:
      - inception

    restart: always
    entrypoint: redis-server --requirepass ${REDIS_PASSWORD}

  adminer:
    container_name: adminer
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile

    expose:
      - 9000
    networks:
      - inception

    depends_on:
      - wordpress

    restart: always
    entrypoint: php-fpm81 --nodaemonize

  ruby:
    container_name: ruby
    build:
      context: ./requirements/ruby
      dockerfile: Dockerfile

    volumes:
      - v_ruby:/var/www
    expose:
      - 3000

    networks:
      - inception
    restart: always
    entrypoint: /tmp/init.sh

networks:
        inception:
                name: inception
                driver: bridge

volumes:
        v_mariadb:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: /home/lugonzal/data/mariadb

        v_wordpress:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: /home/lugonzal/data/wordpress

        v_redis:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: /home/lugonzal/data/redis

        v_ruby:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: /home/lugonzal/data/ruby
