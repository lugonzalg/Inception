services:

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    volumes:
      - nextjs:/var/www/nextjs

    ports:
      - 443:443
    networks:
      - inception
    depends_on:
      - nextjs

    restart: always
    entrypoint: nginx -g "daemon off;"

  adminer:
    container_name: adminer
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile

    expose:
      - 9000
    networks:
      - inception

    depends_on:
      - postgres

    restart: always
    entrypoint: php-fpm81 --nodaemonize

  nextjs:
    container_name: nextjs
    build:
      context: ./requirements/nextjs
      dockerfile: Dockerfile

    volumes:
      - nextjs:/usr/src/app

    environment:
        - NEXTJS_USER
        - NEXTJS_PASS
        - NEXTJS_HOST
        - NEXTJS_DB
        - REACT_PROJECT

    ports:
      - 3000:3000
    expose:
    - 3000

    networks:
      - inception
    depends_on:
      - postgres
    entrypoint: /tmp/docker-entrypoint.sh

  postgres:
    container_name: postgres
    build:
      context: ./requirements/postgres
      dockerfile: Dockerfile

    volumes:
      - postgres:/var/lib/postgresql/data

    environment:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB
        - NEXTJS_USER
        - NEXTJS_PASS
        - NEXTJS_DB

    expose:
    - 5432

    networks:
      - inception

networks:
        inception:
                name: inception
                driver: bridge

volumes:
  postgres:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/postgres

  nextjs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/nextjs
